//AUTHOR:Kamal Wright
//COURSE:CPT187
//PURPOSE:To calculate the price of the user order of Sod
//STARTDATE:November 13th 2019

package edu.CPT187.Wright.Participation;
import java.util.Random;
public class SodOrder 
{
	//SodOrder Class Constraints
	private final double TAX_RATE = .075;
	private final double ZERO_TOTAL = 0.0;
	private int[] itemCounts = {};
	private int[] discountCounts = {};
	private int[] prizeCounts = {};
	private char itemSelection = ' ';
	private char discountType = ' ';
	private String itemName = "";
	private double itemPrice = 0.0;
	private String discountName = "";
	private double discountRate = 0.0;
	private int howMany = 0;
	private int lastItemSelectedIndex = 0;
	Random prizeGenerator = new Random();
	private String prizeName = "";
	
	//SodOrder Constructor
	SodOrder()
	{
		
	}
	//Set Item Selection method
	public void setItemSelection(char borrowedMenuSelection)
	{
		itemSelection = borrowedMenuSelection;
	}
	//Set Item Name method
	public void setItemName(String[] borrowedItemNames)
	{
		
		if(itemSelection == 'A')
		{	
			itemName = borrowedItemNames[0];
			lastItemSelectedIndex = 0;
			
			
		}
		else if(itemSelection == 'B')
		{
			itemName = borrowedItemNames[1];
			lastItemSelectedIndex = 1;

			
		}
		else
		{
			itemName = borrowedItemNames[2];
			lastItemSelectedIndex = 2;
			
		}
	}
			
	
	//Set item Price method
	public void setItemPrice(double[] borrowedItemPrices)
	{
		if(itemCounts.length == 0)
		{
			itemCounts = new int[borrowedItemPrices.length];
		}
		if(itemSelection == 'A')
		{
			itemPrice = borrowedItemPrices[0];
			itemCounts[0]++;
			
		}
		else if(itemSelection == 'B')
		{
			itemPrice = borrowedItemPrices[1];
			itemCounts[1]++;

		}
		else
		{
			itemPrice = borrowedItemPrices[2];
			itemCounts[2]++;
		}
		
	}
	//Set How Many method
	public void setHowMany(int borrowedHowMany)
	{
		howMany = borrowedHowMany;
	}
	//Set Discount Type method
	public void setDiscountType(char borrowedMenuSelection)
	{
		discountType = borrowedMenuSelection;
	}
	//Set Discount Name method
	public void setDiscountName(String[] borrowedDiscountNames)
	{
		if(discountType == 'A')
		{
			discountName = borrowedDiscountNames[0];
			
		}
		else if(discountType == 'B')
		{
			discountName = borrowedDiscountNames[1];
			
		}
		else
		{
			discountName = borrowedDiscountNames[2];
		}
	}
	//Set Discount Rate method
	public void setDiscountRate(double[] borrowedDiscountRate)
	{
		if(discountCounts.length == 0)
		{
			discountCounts = new int[borrowedDiscountRate.length];
		}
		if(discountType == 'A')
		{
			discountRate = borrowedDiscountRate[0];
			discountCounts[0]++;
			
		}
		else if(discountType == 'B')
		{
			discountRate = borrowedDiscountRate[1];
			discountCounts[1]++;
		}
		else
		{
			discountRate = borrowedDiscountRate[2];
			discountCounts[2]++;
		}
	}
	//Set Prize Name method
	public void setPrizeName(String[] borrowedPrizeNames, int borrowedPrizeIndex)
	{
		prizeName = borrowedPrizeNames[borrowedPrizeIndex];
		if(prizeCounts.length == 0)
		{
			prizeCounts = new int[borrowedPrizeNames.length];
		}
		if(borrowedPrizeIndex == 0)
		{
			prizeName = borrowedPrizeNames[0];
			prizeCounts[0]++;
		}
		else if(borrowedPrizeIndex == 1)
		{
			prizeName = borrowedPrizeNames[1];
			prizeCounts[1]++;
		}
		else
		{
			prizeName = borrowedPrizeNames[2];
			prizeCounts[2]++;
		}
	}
	//Set Decrease In Stock
	public void setDecreaseInStock(Inventory borrowedInventoryObject)
	{
		borrowedInventoryObject.setReduceStock(howMany, lastItemSelectedIndex);
	}
	public int getInStockCount(int []borrowedInStockCounts)
	{
		return borrowedInStockCounts[lastItemSelectedIndex];		
	}
	//Gets Item Name
	public String getItemName()
	{
		return itemName;

	}
	//Gets Item Price
	public double getItemPrice()
	{
		return itemPrice;
	}
	//Gets How Many
	public int getHowMany()
	{
		return howMany;
	}
	//Gets Discount Name
	public String getDiscountName()
	{
		return discountName;
	}
	//Gets Discount Rate
	public double getDiscountRate()
	{
		return discountRate;
	}
	//Gets Discount Amount
	public double getDiscountAmt()
	{
		return itemPrice * discountRate;
	}
	//Gets Discount Price
	public double getDiscountPrice()
	{
		return itemPrice - getDiscountAmt();
	}
	//Gets Prize Count
	public int[] getPrizeCounts()
	{
		return prizeCounts;
	}
	//Gets Prize Name
	public String getPrizeName()
	{
		return prizeName;
	}
	//Gets SubTotal
	public double getSubTotal()
	{
		return howMany * getDiscountPrice();
	}
	//Gets Tax Rate
	public double getTaxRate()
	{
		return TAX_RATE;
	}
	//Gets Tax Amount
	public double getTaxAmt()
	{
		return TAX_RATE * getSubTotal();
	}
	//Gets Total Cost
	public double getTotalCost()
	{
		if(discountType == ' ')
		{
			return ZERO_TOTAL;
		}
		else 
		{
			return getSubTotal() + getTaxAmt();
		}
	}
	//Gets Item Counts
	public int[] getItemCounts()
	{
		return itemCounts;
	}
	//Gets Discount Counts
	public int[] getDiscountCounts()
	{
		return discountCounts;
	}
	
	
	
	

}
